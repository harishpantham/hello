========create file==============

public class CreateFile {

	public static void main(String args[]) {
		
		String entityName = "Product";
		
	//	String baseUrl ="D:/Workspace/TodayOffers/src/main/java/com/today/offers";
		/*String baseUrl ="D:/Test/";
		String controllerUrl = baseUrl+"/controller/"+entityName+"Controller.java";
		String serviceIUrl = baseUrl+"/service/"+entityName+"ServiceI.java";
		String serviceImplUrl = baseUrl+"/service/"+entityName+"ServiceImpl.java";
		String repositoryUrl = baseUrl+"/repo/"+entityName+"Repository.java";
		String dtoUrl = baseUrl+"/dto/"+entityName+"DTO.java";*/
		
		String projectName = "Test";
		String directoryName="D";
		String baseUrl= directoryName+":"+"/"+projectName;
		String controllerDirUrl = baseUrl+"/controller";
		String serviceDirUrl = baseUrl+"/service";
		String repositoryDirUrl = baseUrl+"/repo";
		String dtoDirUrl = baseUrl+"/dto";
		
		String[] urls = {controllerDirUrl,serviceDirUrl,repositoryDirUrl,dtoDirUrl};
		Controller controller = new Controller();
		ServiceI serviceI = new ServiceI();
		ServiceImpl serviceImpl = new ServiceImpl();
		
		for(String url : urls) {
			File file = new File(url);
			file.mkdir();
			/*PrintWriter writer = new PrintWriter(url);
			writer.println(controller.printController());
			writer.close();*/
		} 
		
	}
}
=========================serviceI=======================

public class ServiceI {
	
	public String printInterfaces() {

		String entity = "Product";
		String sentity = entity.toLowerCase();
		String semicolon =";";
		
		String subinterface1 = "getAll"+entity+"s()"+semicolon;
		String subinterface2 = "get"+entity+"ById(Long "+" "+sentity+"Id)"+semicolon;
		String subinterface3 = "save"+entity+"("+entity+"DTO"+" "+sentity+"DTO"+")"+semicolon;
		String subinterface4 = "update"+entity+"("+entity+"DTO"+" "+sentity+"DTO"+")"+semicolon;
		String subinterface5 = "delete"+entity+"(Long "+" "+sentity+"Id)"+semicolon;
		
		/*String interface1 = "List<"+entity+"> "+ subinterface1;
		String interface2 = "Optional<"+entity+"> "+subinterface2;
		String interface3 = entity+" "+subinterface3;
		String interface4 = entity+" "+subinterface4;
		String interface5 = "void"+" "+subinterface5;*/
		
		String interface1 ="OffersResponse"+" "+subinterface1;
		String interface2 ="OffersResponse"+" "+subinterface2;
		String interface3 ="OffersResponse"+" "+subinterface3;
		String interface4 ="OffersResponse"+" "+subinterface4;
		String interface5 ="OffersResponse"+" "+subinterface5;
		
		String printInterfaces = interface1+"\n"+interface2+"\n"+interface3+"\n"+interface4+"\n"+interface5;
        System.out.println(printInterfaces);
        
		return printInterfaces;				
   
	
	}
	
	public static void main(String args[]) {
		
	}

}
==============================controller===========================
public class Controller {
	
	public String printController() {
		

		// TODO Auto-generated method stub

		String entity = "Product";
		String sentity = "product";
		String responseName = "OffersResponse";
		


String printController = 
		
		"@RestController\r\n" + 
		"public class "+entity+"Controller {\r\n" + 
		"\r\n" + 
		"    @Autowired\r\n" + 
		"    "+entity+"ServiceI "+sentity+"ServiceI;\r\n" + 
		"\r\n" + 
		"    @GetMapping(\"/"+sentity+"s"+"\")\r\n" + 
		"    public "+responseName+" "+"getAll"+entity+"s()"+" {\r\n" + 
		"        return "+sentity+"ServiceI.getAll"+entity+"s"+";"+"\r\n" +
		"    }\r\n" + 
		"\r\n" + 
		"    @GetMapping(\"/"+sentity+"s/{"+sentity+"Id}\")\r\n" + 
		"    public "+responseName+" get"+entity+"ById(@PathVariable Long "+sentity+"Id) {\r\n" + 
		"        return "+sentity+"ServiceI.get"+entity+"ById("+sentity+"Id)"+";"+"\r\n" + 
		"    }\r\n" + 
		"\r\n" + 
		"    @PostMapping(\"/"+sentity+"s\")\r\n" + 
		"    public "+responseName+" save"+entity+"(@RequestBody "+entity+"DTO "+sentity+"DTO) {\r\n" + 
		"        return "+sentity+"ServiceI.save"+entity+"("+sentity+"DTO)"+";"+"\r\n" + 
		"    }\r\n" + 
		"\r\n" + 
		"    @PutMapping(\"/"+sentity+"s\")\r\n" +
		"    public "+responseName+" update"+entity+"(@RequestBody "+entity+"DTO "+sentity+"DTO) {\r\n" + 
		"        return "+sentity+"ServiceI.update"+entity+"("+sentity+"DTO)"+";"+"\r\n" + 
		"    }\r\n" + 
		"\r\n" + 
		"    @DeleteMapping(\"/"+sentity+"s/{"+sentity+"Id}\")\r\n" + 
		"    public void delete"+entity+"(@PathVariable Long "+sentity+"Id) {\r\n" + 
		"        return "+sentity+"ServiceI.delete"+entity+"("+sentity+"Id)"+";"+"\r\n" + 
		"    }\r\n" + 
		"}";
return printController;

/******************to return the values in List type use following like List<User>**********************/

/*String interface1 = "List<"+entity+"> "+ subinterface1;
String interface2 = "Optional<"+entity+"> "+subinterface2;
String interface3 = entity+" "+subinterface3;
String interface4 = entity+" "+subinterface4;
String interface5 = "void"+" "+subinterface5;
System.out.println("
		
		"@RestController()\r\n" + 
		"@RequestMapping(\"api\")\r\n" + 
		"public class "+entity+"Controller {\r\n" + 
		"\r\n" + 
		"    @Autowired\r\n" + 
		"    "+entity+"ServiceI "+sentity+"ServiceI;\r\n" + 
		"\r\n" + 
		"    @GetMapping(\"/"+sentity+"s"+"\")\r\n" + 
		"    public "+"List<"+entity+"> "+" "+subinterface1+" {\r\n" + 
		"        return "+sentity+"ServiceI."+subinterface1+";"+"\r\n" +
		"    }\r\n" + 
		"\r\n" + 
		"    @GetMapping(\"/"+sentity+"s/{"+sentity+"Id}\")\r\n" + 
		"    public "+"Optional<"+entity+"> "+" get"+entity+"ById(@PathVariable Long "+sentity+"Id) {\r\n" + 
		"        return "+sentity+"ServiceI.get"+entity+"ById("+sentity+"Id)"+";"+"\r\n" + 
		"    }\r\n" + 
		"\r\n" + 
		"    @PostMapping(\"/"+sentity+"s\")\r\n" + 
		"    public "+entity+" save"+entity+"(@RequestBody "+entity+"DTO "+sentity+"DTO) {\r\n" + 
		"        return "+sentity+"ServiceI.save"+entity+"("+sentity+"DTO)"+";"+"\r\n" + 
		"    }\r\n" + 
		"\r\n" + 
		"    @PutMapping(\"/"+sentity+"s/{"+sentity+"Id}\")\r\n" + 
		"    public "+entity+" update"+entity+"(@RequestBody "+entity+"DTO "+sentity+"DTO) {\r\n" + 
		"        return "+sentity+"ServiceI.update"+entity+"("+sentity+"DTO)"+";"+"\r\n" + 
		"    }\r\n" + 
		"\r\n" + 
		"    @DeleteMapping(\"/"+sentity+"s/{"+sentity+"Id}\")\r\n" + 
		"    public void delete"+entity+"(@PathVariable Long "+sentity+"Id) {\r\n" + 
		"        return "+sentity+"ServiceI.delete"+entity+"("+sentity+"Id)"+";"+"\r\n" + 
		"    }\r\n" + 
		"}");
*/

		
	}

	public static void main(String[] args) {}
	}


==========================================ServiceImpl================================================

public class ServiceImpl {
	
public String getObject(String actualObject,String convertToObject) {
		
		
		String filePath = "D:/Workspace/TodayOffers/src/main/java/com/today/offers/dto/ProductDTO.java";
		String finalString = "";
		String methodName="";
		try {
			
			Scanner scanner = new Scanner(new File(filePath));
			while(scanner.hasNextLine()) {
				String line = scanner.nextLine();
				if(line.contains("return")) {
					String str = line.replace("return ", "").trim();
					String arr[] = str.split(";");
					String sactualObject = actualObject.substring(0,1).toLowerCase()+actualObject.substring(1);
					String sconvertToObject = convertToObject.substring(0,1).toLowerCase()+convertToObject.substring(1);
					 methodName ="        private "+actualObject+" get"+actualObject+"("+actualObject+" "+sactualObject+", "+convertToObject+" "+sconvertToObject+") {";
					
					for(String word: arr) {
						String variable =  word.substring(0,1).toUpperCase()+ word.substring(1);
						String str1 = "        if(!StringUtils.isEmpty("+sconvertToObject+".get"+variable+"())) {\n        "+sactualObject+".set"+variable+"("+sconvertToObject+".get"+variable+"());"+"\n"+"        }\n";
						 finalString = finalString+str1+"\n";
					
						}
				}
			}
			scanner.close();
		} catch (FileNotFoundException e) {
			
			e.printStackTrace();
		}
		return methodName+"\n"+finalString;
		
	}

public String printServiceImpl() {

	String responseName = "OffersResponse";
	String sresponseName = "offersResponse";
	String entity = "Product";
	String sentity = "product";
	
	ServiceImpl impl = new ServiceImpl();
	
	
	String str=
			"@Service\r\n"+
			"public class "+entity+"ServiceImpl implements "+entity+"ServiceI{\r\n" + 
			"	\r\n" + 
			"	@Autowired\r\n" + 
			"	"+entity+"Repository "+sentity+"Repository;\r\n" + 
			"	\r\n" + 
			"	@Autowired\r\n" + 
			"	Messages messageService;\r\n" + 
			"\r\n" + 
			"	@Override\r\n" + 
			"	public "+responseName+" getAll"+entity+"s() {\r\n" + 
			"\r\n" + 
			"		List<"+entity+"> "+sentity+"List = "+sentity+"Repository.findAll();\r\n" + 
			"		"+responseName+" "+sresponseName+" = new "+responseName+"();\r\n" + 
			"		if(!StringUtils.isEmpty("+sentity+"List)) {\r\n" + 
			"			List<"+entity+"DTO> "+sentity+"DTOList = get"+entity+"DTOList("+sentity+"List);\r\n" + 
			"			"+sresponseName+".setMessage(messageService.getMessage(\"success.message\"));\r\n" + 
			"			"+sresponseName+".setStatus(HttpStatus.OK.value());\r\n" + 
			"			"+sresponseName+".setPayLoad("+sentity+"DTOList);\r\n" + 
			"			return "+sresponseName+";\r\n" + 
			"		}\r\n" + 
			"		else {\r\n" + 
			"			"+sresponseName+".setMessage(messageService.getMessage(\""+sentity+".no\"));\r\n" + 
			"			"+sresponseName+".setStatus(HttpStatus.OK.value());\r\n" + 
			"			return "+sresponseName+";\r\n" + 
			"		}\r\n" + 
			"		\r\n" + 
			"	}\r\n" + 
			"\r\n" + 
			impl.getObject("ProductDTO", "Product") +"\r\n" + 
			"	@Override\r\n" + 
			"	public "+responseName+" get"+entity+"ById(Long "+sentity+"Id) {\r\n" + 
			"		"+responseName+" "+sresponseName+" = new "+responseName+"();\r\n" + 
			"		if(!StringUtils.isEmpty("+sentity+"Id)) {\r\n" + 
			"			Optional<"+entity+"> optional"+entity+" = "+sentity+"Repository.findById("+sentity+"Id);\r\n" + 
			"			if(optional"+entity+".isPresent()) {\r\n" + 
			"				List<"+entity+"> "+sentity+"List = new ArrayList<>();\r\n" + 
			"				"+entity+" "+sentity+" = optional"+entity+".get();\r\n" + 
			"				"+sentity+"List.add("+sentity+");\r\n" + 
			"				List<"+entity+"DTO> "+sentity+"DTOList = get"+entity+"DTOList("+sentity+"List);\r\n" + 
			"				"+sresponseName+".setMessage(\"success.message\");\r\n" + 
			"				"+sresponseName+".setStatus(HttpStatus.OK.value());\r\n" + 
			"				"+sresponseName+".setPayLoad("+sentity+"DTOList);\r\n" + 
			"			}\r\n" + 
			"			else {\r\n" + 
			"				"+sresponseName+".setMessage(messageService.getMessage(\""+sentity+".no\"));\r\n" + 
			"				"+sresponseName+".setStatus(HttpStatus.OK.value());\r\n" + 
			"			}\r\n" + 
			"		}\r\n" + 
			"		else {\r\n" + 
			"			"+sresponseName+".setMessage(messageService.getMessage(\"invalid.data\"));\r\n" + 
			"			"+sresponseName+".setStatus(HttpStatus.BAD_REQUEST.value());\r\n" + 
			"		}\r\n" + 
			"		\r\n" + 
			"		return "+sresponseName+";\r\n" + 
			"	}\r\n" + 
			"\r\n" + 
			"	@Override\r\n" + 
			"	public "+responseName+" save"+entity+"("+entity+"DTO "+sentity+"DTO) {\r\n" + 
			"		"+responseName+" "+sresponseName+" = new "+responseName+"();\r\n" + 
			"		if("+sentity+"DTO != null) {\r\n" + 
			"			"+entity+" "+sentity+" = new "+entity+"();\r\n" + 
			"			"+sentity+" = get"+entity+"("+sentity+"DTO,"+sentity+");\r\n" + 
			"			"+sentity+"Repository.save("+sentity+");\r\n" + 
			"			"+sresponseName+".setStatus(HttpStatus.OK.value());\r\n" + 
			"			"+sresponseName+".setMessage(messageService.getMessage(\""+sentity+".save\"));\r\n" + 
			"		}\r\n" + 
			"		else {\r\n" + 
			"			"+sresponseName+".setStatus(HttpStatus.BAD_REQUEST.value());\r\n" + 
			"			"+sresponseName+".setMessage(messageService.getMessage(\"invalid.data\"));\r\n" + 
			"		}\r\n" + 
			"		return null;\r\n" + 
			"	}\r\n" + 
			"\r\n" + 
			"	@Override\r\n" + 
			"	public "+responseName+" update"+entity+"("+entity+"DTO "+sentity+"DTO) {\r\n" + 
			"		"+responseName+" "+sresponseName+" = new "+responseName+"();\r\n" + 
			"		if("+sentity+"DTO !=null) {\r\n" + 
			"			Optional<"+entity+"> optional"+entity+" = "+sentity+"Repository.findById("+sentity+"DTO.get"+entity+"Id());\r\n" + 
			"			if(optional"+entity+".isPresent()) {\r\n" + 
			"				"+entity+" "+sentity+" = get"+entity+"("+sentity+"DTO, optional"+entity+".get());\r\n" + 
			"			    "+sentity+"Repository.save("+sentity+");\r\n" + 
			"			    "+sresponseName+".setStatus(HttpStatus.OK.value());\r\n" + 
			"			    "+sresponseName+".setMessage(messageService.getMessage(\""+sentity+".update\"));\r\n" + 
			"			}\r\n" + 
			"			else {\r\n" + 
			"				"+sresponseName+".setStatus(HttpStatus.NOT_FOUND.value());\r\n" + 
			"				"+sresponseName+".setMessage(messageService.getMessage(\""+sentity+".not.found\"));\r\n" + 
			"			}\r\n" + 
			"		}\r\n" + 
			"		else {\r\n" + 
			"			"+sresponseName+".setStatus(HttpStatus.BAD_REQUEST.value());\r\n" + 
			"			"+sresponseName+".setMessage(messageService.getMessage(\"invalid.data\"));\r\n" + 
			"		}\r\n" + 
			"		return "+sresponseName+";\r\n" + 
			"	}\r\n" + 
			"\r\n" + 
			impl.getObject("Product", "ProductDTO")+ 
			"\r\n" +
			"	@Override\r\n" + 
			"	public "+responseName+" delete"+entity+"(Long "+sentity+"Id) {\r\n" + 
			"		"+responseName+" "+sresponseName+" = new "+responseName+"();\r\n" + 
			"		"+sentity+"Repository.deleteById("+sentity+"Id);\r\n" + 
			"		"+sresponseName+".setMessage(messageService.getMessage(\""+sentity+".update\"));\r\n" + 
			"		return "+sresponseName+";\r\n" + 
			"	}\r\n" + 
			"	\r\n" + 
			"}\r\n" + 
			"";
	System.out.println(str);
	return str;
	



}
		public static void main(String args[]) {
			
		}
	}


===========================================Properties.java===============================



public final class Properties {

	public static final String entity = "Product";
	public static final String sentity = "product";
	public static final String responseName = "OffersResponse";
	public static final String sresponseName = "offersResponse";
}

	

